<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.lofalt.myblog.daotmp.CommentMapper">
  <resultMap id="BaseResultMap" type="cn.lofalt.myblog.pojotmp.Comment">
    <id column="comment_id" jdbcType="INTEGER" property="commentId" />
    <result column="comment_content" jdbcType="VARCHAR" property="commentContent" />
    <result column="comment_article_id" jdbcType="INTEGER" property="commentArticleId" />
    <result column="comment_parent_id" jdbcType="INTEGER" property="commentParentId" />
    <result column="comment_create_time" jdbcType="TIMESTAMP" property="commentCreateTime" />
    <result column="comment_user_name" jdbcType="VARCHAR" property="commentUserName" />
    <result column="comment_user_id" jdbcType="INTEGER" property="commentUserId" />
  </resultMap>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from comments
    where comment_id = #{commentId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="cn.lofalt.myblog.pojotmp.Comment">
    <selectKey keyProperty="commentId" order="AFTER" resultType="java.lang.Integer">
      VALUES IDENTITY_VAL_LOCAL()
    </selectKey>
    insert into comments (comment_content, comment_article_id, 
      comment_parent_id, comment_create_time, comment_user_name, 
      comment_user_id)
    values (#{commentContent,jdbcType=VARCHAR}, #{commentArticleId,jdbcType=INTEGER}, 
      #{commentParentId,jdbcType=INTEGER}, #{commentCreateTime,jdbcType=TIMESTAMP}, #{commentUserName,jdbcType=VARCHAR}, 
      #{commentUserId,jdbcType=INTEGER})
  </insert>
  <update id="updateByPrimaryKey" parameterType="cn.lofalt.myblog.pojotmp.Comment">
    update comments
    set comment_content = #{commentContent,jdbcType=VARCHAR},
      comment_article_id = #{commentArticleId,jdbcType=INTEGER},
      comment_parent_id = #{commentParentId,jdbcType=INTEGER},
      comment_create_time = #{commentCreateTime,jdbcType=TIMESTAMP},
      comment_user_name = #{commentUserName,jdbcType=VARCHAR},
      comment_user_id = #{commentUserId,jdbcType=INTEGER}
    where comment_id = #{commentId,jdbcType=INTEGER}
  </update>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select comment_id, comment_content, comment_article_id, comment_parent_id, comment_create_time, 
    comment_user_name, comment_user_id
    from comments
    where comment_id = #{commentId,jdbcType=INTEGER}
  </select>
  <select id="selectAll" resultMap="BaseResultMap">
    select comment_id, comment_content, comment_article_id, comment_parent_id, comment_create_time, 
    comment_user_name, comment_user_id
    from comments
  </select>
  <resultMap id="BaseResultMap" type="cn.lofalt.myblog.pojotmp.Comment">
    <id column="comment_id" jdbcType="INTEGER" property="commentId" />
    <result column="comment_content" jdbcType="VARCHAR" property="commentContent" />
    <result column="comment_article_id" jdbcType="INTEGER" property="commentArticleId" />
    <result column="comment_parent_id" jdbcType="INTEGER" property="commentParentId" />
    <result column="comment_create_time" jdbcType="TIMESTAMP" property="commentCreateTime" />
    <result column="comment_user_name" jdbcType="VARCHAR" property="commentUserName" />
    <result column="comment_user_id" jdbcType="INTEGER" property="commentUserId" />
  </resultMap>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from comments
    where comment_id = #{commentId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="cn.lofalt.myblog.pojotmp.Comment">
    <selectKey keyProperty="commentId" order="AFTER" resultType="java.lang.Integer">
      VALUES IDENTITY_VAL_LOCAL()
    </selectKey>
    insert into comments (comment_content, comment_article_id, 
      comment_parent_id, comment_create_time, comment_user_name, 
      comment_user_id)
    values (#{commentContent,jdbcType=VARCHAR}, #{commentArticleId,jdbcType=INTEGER}, 
      #{commentParentId,jdbcType=INTEGER}, #{commentCreateTime,jdbcType=TIMESTAMP}, #{commentUserName,jdbcType=VARCHAR}, 
      #{commentUserId,jdbcType=INTEGER})
  </insert>
  <update id="updateByPrimaryKey" parameterType="cn.lofalt.myblog.pojotmp.Comment">
    update comments
    set comment_content = #{commentContent,jdbcType=VARCHAR},
      comment_article_id = #{commentArticleId,jdbcType=INTEGER},
      comment_parent_id = #{commentParentId,jdbcType=INTEGER},
      comment_create_time = #{commentCreateTime,jdbcType=TIMESTAMP},
      comment_user_name = #{commentUserName,jdbcType=VARCHAR},
      comment_user_id = #{commentUserId,jdbcType=INTEGER}
    where comment_id = #{commentId,jdbcType=INTEGER}
  </update>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select comment_id, comment_content, comment_article_id, comment_parent_id, comment_create_time, 
    comment_user_name, comment_user_id
    from comments
    where comment_id = #{commentId,jdbcType=INTEGER}
  </select>
  <select id="selectAll" resultMap="BaseResultMap">
    select comment_id, comment_content, comment_article_id, comment_parent_id, comment_create_time, 
    comment_user_name, comment_user_id
    from comments
  </select>
  <resultMap id="BaseResultMap" type="cn.lofalt.myblog.pojotmp.Comment">
    <id column="comment_id" jdbcType="INTEGER" property="commentId" />
    <result column="comment_content" jdbcType="VARCHAR" property="commentContent" />
    <result column="comment_article_id" jdbcType="INTEGER" property="commentArticleId" />
    <result column="comment_parent_id" jdbcType="INTEGER" property="commentParentId" />
    <result column="comment_create_time" jdbcType="TIMESTAMP" property="commentCreateTime" />
    <result column="comment_user_name" jdbcType="VARCHAR" property="commentUserName" />
    <result column="comment_user_id" jdbcType="INTEGER" property="commentUserId" />
  </resultMap>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from comments
    where comment_id = #{commentId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="cn.lofalt.myblog.pojotmp.Comment">
    insert into comments (comment_id, comment_content, comment_article_id, 
      comment_parent_id, comment_create_time, comment_user_name, 
      comment_user_id)
    values (#{commentId,jdbcType=INTEGER}, #{commentContent,jdbcType=VARCHAR}, #{commentArticleId,jdbcType=INTEGER}, 
      #{commentParentId,jdbcType=INTEGER}, #{commentCreateTime,jdbcType=TIMESTAMP}, #{commentUserName,jdbcType=VARCHAR}, 
      #{commentUserId,jdbcType=INTEGER})
  </insert>
  <update id="updateByPrimaryKey" parameterType="cn.lofalt.myblog.pojotmp.Comment">
    update comments
    set comment_content = #{commentContent,jdbcType=VARCHAR},
      comment_article_id = #{commentArticleId,jdbcType=INTEGER},
      comment_parent_id = #{commentParentId,jdbcType=INTEGER},
      comment_create_time = #{commentCreateTime,jdbcType=TIMESTAMP},
      comment_user_name = #{commentUserName,jdbcType=VARCHAR},
      comment_user_id = #{commentUserId,jdbcType=INTEGER}
    where comment_id = #{commentId,jdbcType=INTEGER}
  </update>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select comment_id, comment_content, comment_article_id, comment_parent_id, comment_create_time, 
    comment_user_name, comment_user_id
    from comments
    where comment_id = #{commentId,jdbcType=INTEGER}
  </select>
  <select id="selectAll" resultMap="BaseResultMap">
    select comment_id, comment_content, comment_article_id, comment_parent_id, comment_create_time, 
    comment_user_name, comment_user_id
    from comments
  </select>
</mapper>